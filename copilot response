Explanation
•	ContentPage: This is the root element for the page. It defines a single page in your app.
•	ScrollView: Allows the content to be scrollable vertically. This is useful if the content exceeds the visible area of the screen.
•	VerticalStackLayout: Arranges its child elements in a vertical stack.
•	Padding="30,0": Adds horizontal padding of 30 units on both sides.
•	Spacing="25": Adds 25 units of space between each child element.
Inside the VerticalStackLayout:
1.	Image
•	Source="dotnet_bot.png": Displays an image named dotnet_bot.png from your resources.
•	HeightRequest="185": Sets the image height to 185 units.
•	Aspect="AspectFit": Maintains the aspect ratio of the image.
•	SemanticProperties.Description: Provides an accessibility description.
2.	Label (Headline)
•	Text="Hello, Chrisnel Rivera!": Displays a greeting.
•	Style="{StaticResource Headline}": Applies a predefined style resource named Headline.
•	SemanticProperties.HeadingLevel="Level1": Marks this as a top-level heading for accessibility.
3.	Label (SubHeadline)
•	Text="Welcome to &#10;.NET Multi-platform App UI": Displays a welcome message. &#10; inserts a line break.
•	Style="{StaticResource SubHeadline}": Applies a predefined style resource named SubHeadline.
•	SemanticProperties.HeadingLevel="Level2": Marks this as a second-level heading.
•	SemanticProperties.Description: Adds an accessibility description.
4.	Button
•	x:Name="CounterBtn": Gives the button a name for code-behind reference.
•	Text="Click me": Button label.
•	SemanticProperties.Hint: Provides an accessibility hint.
•	Clicked="OnCounterClicked": Event handler for button clicks (defined in the code-behind).
•	HorizontalOptions="Fill": Makes the button fill the available horizontal space.
---
Summary:
This XAML defines a simple, scrollable page with an image, two styled labels, and a button. The button is interactive and will trigger logic in the code-behind when clicked. The layout is accessible and visually spaced for clarity.
